from typing import Optional, List
import subprocess
from tools.tool_decorator import collect_tool
from core.snake_wrapper import run_snake_wrapper


def run_filterconsensusreads(
    *,
    bam: str,
    vcf: List[str],
    reference_genome: str,
    filtered_bam: str,
    min_base_quality: int = 5,
    min_reads: Optional[List[int]] = None,
     
) -> subprocess.CompletedProcess:
    """
    Filters consensus reads generated by CallMolecularConsensusReads or CallDuplexConsensusReads.

    Args:
        bam: Input BAM file containing consensus reads.
        vcf: List of input VCF files.
        reference_genome: Reference genome file.
        filtered_bam: Output BAM file to store filtered consensus reads.
        min_base_quality: Mask (make N) consensus bases with quality less than this threshold. Default is 5.
        min_reads: Number of reads required to support a UMI. For files processed with CallMolecularConsensusReads, one value is required.
                   For CallDuplexConsensusReads, up to three values can be provided. If fewer than three are given,
                   the last value will be repeated.
  
    Returns:
        CompletedProcess instance containing information about the completed Snakemake process.
    """
    params = {
        "min_base_quality": min_base_quality,
        "min_reads": min_reads if min_reads else [],
    }
    return run_snake_wrapper(
        wrapper="file:tools/fgbio/filterconsensusreads",
        inputs=dict(bam=bam, vcf=vcf, reference_genome=reference_genome),
        outputs=dict(filtered_bam=filtered_bam),
        params={k: v for k, v in params.items() if v},
         
    )


@collect_tool()
def filterconsensusreads(
    *,
    bam: str,
    vcf: List[str],
    reference_genome: str,
    filtered_bam: str,
    min_base_quality: int = 5,
    min_reads: Optional[List[int]] = None,
     
) -> subprocess.CompletedProcess:
    """
    Filters consensus reads generated by CallMolecularConsensusReads or CallDuplexConsensusReads.

    Args:
        bam: Input BAM file containing consensus reads.
        vcf: List of input VCF files.
        reference_genome: Reference genome file.
        filtered_bam: Output BAM file to store filtered consensus reads.
        min_base_quality: Mask (make N) consensus bases with quality less than this threshold. Default is 5.
        min_reads: Number of reads required to support a UMI. For files processed with CallMolecularConsensusReads, one value is required.
                   For CallDuplexConsensusReads, up to three values can be provided. If fewer than three are given,
                   the last value will be repeated.
  
    Returns:
        CompletedProcess instance containing information about the completed Snakemake process.
    """
    return run_filterconsensusreads(
        bam=bam,
        vcf=vcf,
        reference_genome=reference_genome,
        filtered_bam=filtered_bam,
        min_base_quality=min_base_quality,
        min_reads=min_reads,
         
    )
